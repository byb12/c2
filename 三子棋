//头文件
#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>
#define ROW 3
#define COL 3


//声明
void Initboard(char Board[ROW][COL], int row, int col);
void Displayboard(char Board[ROW][COL], int row, int col);
void PlayerMove(char Board[ROW][COL], int row, int col);
void ComputerMove(char Board[ROW][COL], int row, int col);

//四种游戏状态
//玩家赢 ‘*’
//电脑赢 ‘#’
//平局   ‘Q’
//继续   ‘C’
char  IsWin(char Board[ROW][COL], int row, int col);

//函数
#include"game.h"
void Initboard(char Board[ROW][COL], int row, int col)
{
	int i = 0;
	int j = 0;
	for (i = 0; i < row; i++)
	{
		for (j = 0; j < col; j++)
		{
			Board[i][j] = ' ';
		}
	}
}
void Displayboard(char Board[ROW][COL], int row, int col)
{
	int i = 0;
	for (i = 0; i < row; i++)
	{
		int j = 0;
		for (j = 0; j < col; j++)
		{
			//打印一行的数据
			printf(" %c ",Board[i][j]);
			if(j<col-1)
			printf("|");
		}
		printf("\n");
		//打印分隔行
		if (i < row - 1)
		{
			for (j = 0; j < col; j++)
			{
				printf("---");
				if(j<col-1)
				printf("|");
			}
			printf("\n");
		}

				
	}
}
void PlayerMove(char Board[ROW][COL], int row, int col)
{
	int x = 0;
	int y = 0;
	printf("玩家走:");
	while (1)
	{
		printf("请输入要下的坐标：");
		scanf("%d%d", &x, &y);
		//判断xy坐标的合法性
		if (x >= 0 && x < row && y >= 0 && y < col)
		{
			if (Board[x ][y] == ' ')
			{
				Board[x ][y] = '*';
				break;
			}
			else
			{
				printf("该坐标被占用\n");
			}
		}
		else
		{
			printf("该坐标非法，请重新输入！");
		}
	}
	
}
void ComputerMove(char Board[ROW][COL], int row, int col)
{
	printf("电脑走:\n");
	while (1) 
	{
		int x = rand() % row;
		int y = rand() % col;
		if (Board[x][y] == ' ')
		{
			Board[x][y] = '#';
			break;
		}
		
	}
}
//返回1表示棋盘满了
//返回0表示棋盘没满
int IsFull(char Board[ROW][COL], int row, int col)
{
	int i = 0;
	int j = 0;
	for (i = 0; i < row; i++)
	{
		for (j = 0; j < row; j++)
		{
			if (Board[i][i] = ' ')
			{
				return 0;
			}
		}
	}
	return 1;

}
char  IsWin(char Board[ROW][COL], int row, int col)
{
	int i = 0;
	//横三行
	for (i = 0; i < row; i++)
	{
		if (Board[i][0] == Board[i][1] && Board[i][1] == Board[i][2] && Board[i][1] != ' ')
		{
			return Board[i][1];
		}
	}
	//三列
	for (i = 0; i < col; i++)
	{
		if(Board[0][i] == Board[1][i] && Board[1][i] == Board[2][i] && Board[1][i] != ' ')
		{
			return Board[1][i];
		}
	}
	//对角线
	if (Board[1][1] == Board[0][0] && Board[1][1] == Board[2][2] && Board[1][1] != ' ')
	{
		return Board[1][1];
	}
	if (Board[2][0] == Board[1][1] && Board[1][1] == Board[0][2] && Board[1][1] != ' ')
	{
		return Board[1][1];
	}
	//判断是否平局
	if (1 == IsFull(Board, ROW, COL))
	{
		return 'Q';
	}
	return 'C';
}

//主函数
#include"game.h"

void menu()
{
	printf("**********************\n");
	printf("****1.play  0.exit****\n");
	printf("**********************\n");
}
void game()
{
	char ret = 0;
	//存放棋盘信息
	char Board[ROW][COL] = { 0 };
	//初始化棋盘
	Initboard( Board,ROW, COL);
	//打印棋盘
	Displayboard( Board, ROW, COL);
	//下棋
	while (1)
	{
		//玩家走
		PlayerMove(Board, ROW, COL);
		Displayboard(Board, ROW, COL);
		//判断玩家是否赢
		ret = IsWin(Board, ROW, COL);
		if (ret != 'C')
		{
			break;
		}
		//电脑走
		ComputerMove(Board, ROW, COL);
		Displayboard(Board, ROW, COL);
		//判断电脑是否赢
		ret = IsWin(Board, ROW, COL);
		if (ret != 'C')
		{
			break;
		}
	}
		if (ret == '*')
		{
			printf("玩家赢\n");
		}
		else if (ret == '#')
		{
			printf("电脑赢\n");
		}
		else
		{
			printf("平局\n");
		}
	
}
void test()
{
	int input = 0;
	srand((unsigned int)time(0));
	do
	{
		menu();
		printf("请选择：");
		scanf("%d", &input);
		switch (input)
		{
		case 1:
			game();
			break;
		case 0:
			printf("退出游戏。\n");
			break;
		default:
			printf("选择错误，请重新选择。\n");
			break;
		}
	} while (input);
}
int main()
{
	test();
	return 0; 

}
